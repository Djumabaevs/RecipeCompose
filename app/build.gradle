plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "de.mannodermaus.android-junit5"
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.djumabaevs.recipecompose"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }
    composeOptions {
        def kotlin_compiler_version = "1.5.10"
        kotlinCompilerVersion kotlin_compiler_version

        def kotlin_compiler_extension_version = "1.0.0"
        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
    }
    buildFeatures {
        compose true
    }


}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'

    def app_compat = "1.3.0-beta01"
    implementation "androidx.appcompat:appcompat:$app_compat"

    def material = "1.2.1"
    implementation "com.google.android.material:material:$material"

    def constraint_layout = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    def androidx_ui = "1.0.0-alpha07"
    implementation "androidx.ui:ui-tooling:$androidx_ui"

    def compose = "1.0.0"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:$compose"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-core:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"

    def compose_constraint = "1.0.0-beta02"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint"

    def compose_activity = "1.3.1"
    implementation "androidx.activity:activity-compose:$compose_activity"

    def nav_version = "2.3.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "androidx.navigation:navigation-compose:2.4.0-alpha06"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'

    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    def hilt = "2.37"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"

    def hilt_lifecycle_viewmodel = "1.0.0-alpha03"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_viewmodel"

    def glide = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    def room_version = "2.3.0"

    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Room
    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:2.4.0-alpha04"

    //Datastore

    implementation "androidx.datastore:datastore:1.0.0-rc02"

    // optional - RxJava2 support
    implementation "androidx.datastore:datastore-rxjava2:1.0.0-rc02"

    // optional - RxJava3 support
    implementation "androidx.datastore:datastore-rxjava3:1.0.0-rc02"

    //Junit5

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.1")

    //Accompanist coil

    implementation 'com.google.accompanist:accompanist-coil:0.15.0'
    implementation("io.coil-kt:coil-compose:1.3.2")

    //OkHttp

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //junit5 test

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    //Preferences Datastore

    implementation "androidx.datastore:datastore-preferences:1.0.0-rc02"

    // optional - RxJava2 support
    implementation "androidx.datastore:datastore-preferences-rxjava2:1.0.0-rc02"

    // optional - RxJava3 support
    implementation "androidx.datastore:datastore-preferences-rxjava3:1.0.0-rc02"


}